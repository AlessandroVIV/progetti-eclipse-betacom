package com.betacom.jpa.process;

import java.time.LocalDate;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import com.betacom.jpa.dto.SocioDTO;
import com.betacom.jpa.exception.AcademyException;
import com.betacom.jpa.repositories.ICertificatoRepository;
import com.betacom.jpa.requests.CertificatoRequest;
import com.betacom.jpa.requests.SocioReq;
import com.betacom.jpa.services.interfaces.ICertificatoServices;
import com.betacom.jpa.services.interfaces.ISocioServices;

import lombok.extern.log4j.Log4j2;

@Log4j2
@Component
public class MainProcess {

	@Autowired
	private ISocioServices socioServices;
	
	@Autowired
	private ICertificatoServices certificatoServices;

    MainProcess(ICertificatoRepository ICertificatoRepository) {
    }
	
	public void execute() {
		
		try {
			
			SocioReq r = new SocioReq();
			r.setNome("Paolo");
			r.setCognome("Rossi");
			r.setCodiceFiscale("123456789");
			r.setEmail("p.rossi@t.it");
		
			int socioId = socioServices.insert(r);
			CertificatoRequest cR = new CertificatoRequest();
			cR.setDataCertificato(LocalDate.parse("2025-01-01"));
			cR.setSocioId(socioId);
			cR.setTipo(false);
			certificatoServices.create(cR);

			r = new SocioReq();
			r.setNome("Bruno");
			r.setCognome("Verde");
			r.setCodiceFiscale("88888888888");
			r.setEmail("p.rossi@t.it");
		
			socioId = socioServices.insert(r);
			cR = new CertificatoRequest();
			cR.setDataCertificato(LocalDate.parse("2025-02-02"));
			cR.setSocioId(socioId);
			cR.setTipo(true);
			certificatoServices.create(cR);
			
			r = new SocioReq();
			r.setId(socioId);
			
			socioServices.delete(r);
			log.debug("After delete socio");

			r = new SocioReq();
			r.setNome("Alberto");
			r.setCognome("Nero");
			r.setCodiceFiscale("9999999999");
			r.setEmail("a.nero@t.it");
		
			socioId = socioServices.insert(r);		
		
		} catch (AcademyException e) {
			log.error(e.getMessage());
		}
		
		List<SocioDTO> lS = socioServices.listAll();
		lS.forEach(s -> log.debug(s.toString()));

		
		log.debug("Fine del programma");
		
	}
}
