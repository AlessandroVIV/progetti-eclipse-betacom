package com.betacom.car.process;

import java.util.List;

import com.betacom.car.dao.BiciDAO;
import com.betacom.car.dao.MacchinaDAO;
import com.betacom.car.dao.MotoDAO;
import com.betacom.car.dao.VeicoloDAO;
import com.betacom.car.models.Veicolo;

public class VeicoliProcess {

    private final VeicoloDAO daoV = new VeicoloDAO();
    private final MacchinaDAO daoM = new MacchinaDAO();
    private final MotoDAO daoMo = new MotoDAO();
    private final BiciDAO daoB = new BiciDAO();

    public void handleAdd(String line) {
    	
        try {
        	
            String[] parts = line.split(",");
            String tipo = parts[0];

            if (tipo.equals("macchina")) {
                Object[] macchinaParams = {
                    Integer.parseInt(parts[1]), // numero porte
                    parts[6],                   // targa
                    Integer.parseInt(parts[7])  // cc
                };
                int idMacchina = daoM.insert("insert_macchina", macchinaParams);

                Object[] veicoloParams = {
                    Integer.parseInt(parts[5]), // anno
                    Integer.parseInt(parts[2]),
                    resolveId("alimentazione", parts[3]),
                    resolveId("categoria", parts[4]),
                    resolveId("colore", parts[5]),
                    resolveId("marca", parts[6]),
                    resolveId("modello", parts[7]),
                    idMacchina,
                    null, null
                };
                
                int idVeicolo = daoV.insert("insert_veicolo", veicoloParams);
                System.out.println("Macchina aggiunta con ID: " + idVeicolo);

            } else if (tipo.equals("moto")) {
            	
                Object[] motoParams = {
                    parts[6],
                    Integer.parseInt(parts[7])
                };
                int idMoto = daoMo.insert("insert_moto", motoParams);

                Object[] veicoloParams = {
                    Integer.parseInt(parts[5]),
                    Integer.parseInt(parts[2]),
                    resolveId("alimentazione", parts[3]),
                    resolveId("categoria", parts[4]),
                    resolveId("colore", parts[5]),
                    resolveId("marca", parts[6]),
                    resolveId("modello", parts[7]),
                    null,
                    idMoto,
                    null
                    
                };
                
                int idVeicolo = daoV.insert("insert_veicolo", veicoloParams);
                System.out.println("Moto aggiunta con ID: " + idVeicolo);
            }

            // simile per bici...
        } catch (Exception e) {
            System.out.println("Errore nell'add: " + e.getMessage());
        }
    }

    public void handleUpdate(String line) {
        try {
            String[] parts = line.split(",");
            String tipo = parts[0];
            int id = Integer.parseInt(parts[1]);

            if (tipo.equals("macchina")) {
                for (int i = 2; i < parts.length; i++) {
                    String[] kv = parts[i].split("=");
                    String key = kv[0];
                    String value = kv[1];
                    if (key.equals("alim")) {
                        daoV.update("update_veicolo", new Object[]{id, resolveId("alimentazione", value)});
                    } else if (key.equals("colore")) {
                        daoV.update("update_veicolo", new Object[]{id, resolveId("colore", value)});
                    }
                    // continua con altri campi...
                }
            }

        } catch (Exception e) {
            System.out.println("Errore nell'update: " + e.getMessage());
        }
    }

    public void handleDelete(String line) {
        try {
            String[] parts = line.split(",");
            String tipo = parts[0];
            int idVeicolo = Integer.parseInt(parts[1]);

            daoV.delete("delete_veicolo", new Object[]{idVeicolo});
            if (tipo.equals("macchina")) {
                // recupera id_macchina e cancella da tabella macchina
            } else if (tipo.equals("moto")) {
                // idem per moto
            } else if (tipo.equals("bici")) {
                // idem per bici
            }

        } catch (Exception e) {
            System.out.println("Errore nella delete: " + e.getMessage());
        }
    }

    public void handleList() {
        try {
            List<Veicolo> lista = daoV.findAll();
            lista.forEach(System.out::println);
        } catch (Exception e) {
            System.out.println("Errore nella list: " + e.getMessage());
        }
    }

    private int resolveId(String tabella, String valore) throws Exception {
        // Esempio fittizio: SELECT id FROM colore WHERE nome = 'bianca'
        // Lo implementi tu in base alla tua struttura
        // Per ora ti consiglio di usare mappature statiche in un Map<String, Integer>
        return 1;
    }
	
}
